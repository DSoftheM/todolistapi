import { Button, Flex } from "antd"
import { useNavigate, useParams } from "react-router-dom"
import { Nav } from "../../nav"

export function AssignmentPrintPreview() {
    const { assignmentId } = useParams<{ assignmentId: string }>()

    const navigate = useNavigate()

    return (
        <Flex vertical gap={20} flex={1}>
            <Button onClick={() => navigate(Nav.assignments.root)}>Назад</Button>
            <p>task-print-preview id ={assignmentId}</p>
            <embed height={600} src="https://filesamples.com/samples/document/pdf/sample2.pdf" type="" />
        </Flex>
    )
}

// У меня есть приложение на C#. Там есть сущность задачи и работника. Можно создавать задачи, назначать ответственных, производить поиск по задачам. Придумай еще функционал, который можно было бы реализовать

// Вот несколько идей для расширения функционала вашего приложения на C# с задачами и работниками:

// 1. **Приоритет задач**: Возможность устанавливать приоритеты для задач (низкий, средний, высокий), чтобы помочь работникам сосредоточиться на самых важных задачах.

// 2. **Статусы задач**: Добавление статусов (например, «В процессе», «Завершено», «На проверке») для отслеживания прогресса выполнения задач.

// 3. **Дедлайны**: Возможность устанавливать сроки выполнения для каждой задачи, что поможет в планировании и соблюдении сроков.

// 4. **Комментирование**: Функция для оставления комментариев по каждой задаче, чтобы работники могли задавать вопросы или обсуждать детали выполнения.

// 5. **Напоминания и уведомления**: Реализация механизма уведомлений о предстоящих дедлайнах или изменениях в статусах задач.

// 6. **Фильтры поиска**: Расширение возможности поиска задач с использованием различных фильтров, таких как дата создания, ответственный, статус и приоритет.

// 7. **История изменений**: Ведение журнала изменений по задачам, чтобы проследить за историей их редактирования.

// 8. **Возможность вложений**: Позволить пользователям прикреплять файлы к задачам для предоставления дополнительной информации или документов.

// 9. **Отчеты**: Генерация отчетов по задачам (например, по выполненным задачам за неделю/месяц, загрузке работников и т.д.) для анализа производительности.

// 10. **Интеграция с календарем**: Синхронизация задач с календарями (Google Calendar, Outlook) для управления временем.

// 11. **Анализ нагрузки**: Инструменты для анализа распределения задач между работниками, чтобы выявлять перегрузки и равномернее распределять работу.

// 12. **Теги или метки**: Возможность добавления тегов к задачам для более удобной сортировки и поиска.

// 13. **Шаблоны задач**: Создание шаблонов для часто повторяющихся задач, чтобы их можно было быстро создавать без необходимости повторного ввода всех данных.

// 14. **Чат или обсуждения**: Внедрение функции для обмена сообщениями между работниками по конкретной задаче для более быстрого взаимодействия.

// Реализация этих функций может значительно повысить удобство и эффективность работы с задачами в вашем приложении.
